<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ggplot on ECOSTATS</title>
    <link>https://ecological-stats.netlify.app/tags/ggplot/</link>
    <description>Recent content in ggplot on ECOSTATS</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <lastBuildDate>Sun, 15 May 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://ecological-stats.netlify.app/tags/ggplot/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>出版できる図表をggplotで</title>
      <link>https://ecological-stats.netlify.app/2022/05/15/ggplot/</link>
      <pubDate>Sun, 15 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://ecological-stats.netlify.app/2022/05/15/ggplot/</guid>
      <description>応答変数（Y軸）の異なる図を並べる軸のスケールをパネルごとに変える変数変換特殊文字軸名軸の値パネルストライプ見栄えのいい図表を作ることはとても好きで、不必要なほどにこだわってしまうこともある。しかし、「査読コメントに対応するために、図表を作り直すこと」は大嫌いであった*。これには理由がある。学生のころはＲの図表作成能力が低かったため、Rで図表のベースをつくったら、細かい調整をパワポやイラストレーターでしていたのだ。この作業は馬鹿にならない時間がかかるのだが、ちょっとした解析の修正や、リバイスの度にやり直しになる。
この作業による時間のロスが無駄だと感じたため、そのまま出版できる図表をコードを走らせるだけで作れるようせっせと豆知識をためてきた。最近ではRmarkdownと合わせれば、MicrosoftのOfficeに頼らずともすべての作業がRで完結する。ここでは、ggplot関連で案外わかるまで時間のかかったものに焦点をあててまとめる。もっといい書き方もあるかもしれないので、そのときはこっそり教えてほしい。今回は種数と面積の関係を模した以下のダミーデータを使って例を示す。
# dummy datax &amp;lt;- runif(100, 0.1, 1000) # hypothetical aream &amp;lt;- model.matrix(~log(x)) # model matrixy &amp;lt;- rpois(length(x), exp(m %*% c(log(5), 0.5))) # hypothetical richnessdf0 &amp;lt;- tibble(area = x,gamma = y,group = rep(letters[1:4], each = 25)) %&amp;gt;% mutate(alpha = rbeta(length(y), 5, 5) * gamma,beta = gamma / alpha) %&amp;gt;% pivot_longer(cols = c(alpha, beta, gamma),names_to = &amp;quot;metric&amp;quot;,values_to = &amp;quot;diversity&amp;quot;)print(df0)## # A tibble: 300 x 4## area group metric diversity## &amp;lt;dbl&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;chr&amp;gt; &amp;lt;dbl&amp;gt;## 1 630.</description>
    </item>
    
  </channel>
</rss>
